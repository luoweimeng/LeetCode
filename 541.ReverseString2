## Problem setting

Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:

```
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
```
Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]

## Approach 1

```java
class Solution {
    public String reverseStr(String s, int k) {
        int i = 0;
        char[] ca = s.toCharArray();
        while (i < ca.length) {
            if (i + k < ca.length)
                reverse(ca, i, i+k);
            else
                reverse(ca, i, s.length());
            i += 2 * k;
        }
        return String.valueOf(ca);
    }
    
    //reverse the string between [i, j) (j is exclusive)
    public void reverse(char[] ca, int i, int j) {
        j = j - 1;
        while (i < j) {
            char temp = ca[i];
            ca[i] = ca[j];
            ca[j] = temp;
            i++;
            j--;
        }
    }
}
```